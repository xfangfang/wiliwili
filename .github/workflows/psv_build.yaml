name: Build (Sony Playstation Vita)

on:
  push:
  pull_request:

defaults:
  run:
    shell: sh

jobs:
  vita:
    name: psv
    runs-on: ubuntu-latest
    container:
      image: vitasdk/vitasdk:latest

    steps:
      - name: Install build requirements
        run: |
          apk update 
          apk add cmake ninja meson pkgconf bash git

      - uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0

      - uses: actions/cache/restore@v3
        id: restore-pvr-cache
        with:
          path: /vita/dependencies
          key: SDL-vita-pvr-3.9

      - name: Download PVR_PSP2 (GLES)
        if: ${{ !steps.restore-pvr-cache.outputs.cache-hit }}
        run: |
          pvr_psp2_version=3.9
          
          mkdir -p /vita/dependencies/include
          mkdir -p /vita/dependencies/lib
          mkdir -p /vita/dependencies/suprx
          
          # Configure PVR_PSP2 headers
          wget https://github.com/GrapheneCt/PVR_PSP2/archive/refs/tags/v$pvr_psp2_version.zip -P/tmp
          unzip /tmp/v$pvr_psp2_version.zip -d/tmp
          cp -r /tmp/PVR_PSP2-$pvr_psp2_version/include/* /vita/dependencies/include
          rm /tmp/v$pvr_psp2_version.zip
          
          # include guard of PVR_PSP2's khrplatform.h does not match the usual one
          sed -i -e s/__drvkhrplatform_h_/__khrplatform_h_/ /vita/dependencies/include/KHR/khrplatform.h
          
          # Configure PVR_PSP2 stub libraries
          wget https://github.com/GrapheneCt/PVR_PSP2/releases/download/v$pvr_psp2_version/vitasdk_stubs.zip -P/tmp
          unzip /tmp/vitasdk_stubs.zip -d/tmp/pvr_psp2_stubs
          find /tmp/pvr_psp2_stubs -type f -name "*.a" -exec cp {} /vita/dependencies/lib \;
          rm /tmp/vitasdk_stubs.zip
          rm -rf /tmp/pvr_psp2_stubs
          
          # Configure PVR_PSP2 *.suprx
          wget https://github.com/GrapheneCt/PVR_PSP2/releases/download/v$pvr_psp2_version/PSVita_Release.zip -P/tmp
          unzip /tmp/PSVita_Release.zip -d/tmp/PSVita_Release
          rm /tmp/PSVita_Release/libGLESv1_CM.suprx
          rm /tmp/PSVita_Release/libpvr2d.suprx
          mv /tmp/PSVita_Release/*.suprx /vita/dependencies/suprx/
          rm -rf /tmp/PSVita_Release.zip
          rm -rf /tmp/PSVita_Release

      - uses: actions/cache/save@v3
        if: ${{ !steps.restore-pvr-cache.outputs.cache-hit }}
        with:
          path: /vita/dependencies
          key: SDL-vita-pvr-3.9

      - name: Copy PVR_PSP2 (GLES) to vita toolchain dir
        run: |
          cp -rv /vita/dependencies/* ${VITASDK}/arm-vita-eabi
          mv /vita/dependencies/suprx/*.suprx scripts/psv/module/ 
          ls -lah ${VITASDK}/arm-vita-eabi
          ls -lah scripts/psv/module/

      - uses: actions/cache/restore@v3
        id: restore-common-deps-cache
        with:
          path: /vita/common_deps
          key: Dep-vita-${{ hashFiles('scripts/psv/curl/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/ffmpeg/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/mpv/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/sdl2/VITABUILD.yml') }}

      - name: Build Dependencies
        if: ${{ !steps.restore-common-deps-cache.outputs.cache-hit }}
        run: |
          mdkir -p /vita/common_deps
          apk add patch
          adduser --gecos '' --disabled-password builder
          echo 'builder ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/builder
          chown -R builder:builder $(pwd)/scripts/psv
          su - builder -c "cd /data/scripts/psv/curl && vita-makepkg"
          su - builder -c "cd /data/scripts/psv/sdl2 && vita-makepkg"
          su - builder -c "cd /data/scripts/psv/ffmpeg && vita-makepkg"
          vdpm /data/scripts/psv/ffmpeg/*-arm.tar.xz
          vdpm /data/scripts/psv/sdl2/*-arm.tar.xz
          touch /tmp/vdpm_install_ffmpeg
          touch /tmp/vdpm_install_sdl2
          su - builder -c "cd /data/scripts/psv/mpv && vita-makepkg"
          mv /data/scripts/psv/curl/*-arm.tar.xz /vita/common_deps/
          mv /data/scripts/psv/sdl2/*-arm.tar.xz /vita/common_deps/
          mv /data/scripts/psv/ffmpeg/*-arm.tar.xz /vita/common_deps/
          mv /data/scripts/psv/mpv/*-arm.tar.xz /vita/common_deps/
          ls -lah /vita/common_deps/

      - uses: actions/cache/save@v3
        if: ${{ !steps.restore-common-deps-cache.outputs.cache-hit }}
        with:
          path: /vita/common_deps
          key: Dep-vita-${{ hashFiles('scripts/psv/curl/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/ffmpeg/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/mpv/VITABUILD.yml') }}-${{ hashFiles('scripts/psv/sdl2/VITABUILD.yml') }}

      - name: Install Dependencies
        run: vdpm /vita/common_deps/*-arm.tar.xz

      - name: Bulid wiliwili
        run: |
          cmake -S . -B build -G Ninja \
            -DPLATFORM_PSV=ON \
            -DUSE_SYSTEM_CURL=ON \
            -DUSE_SYSTEM_SDL2=ON \
            -DMPV_NO_FB=ON \
            -DVERIFY_SSL=OFF \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_FLAGS="-Wno-error=pedantic -Wno-psabi"
          cmake --build build --verbose
          mv wiliwili.self eboot.bin

      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: wiliwili.vpk
          path: build/wiliwili.vpk

      - name: Upload dist
        uses: actions/upload-artifact@v3
        with:
          name: eboot.bin
          path: build/eboot.bin